@using System.Globalization;

@if (DateRangeSelect is not null)
{
    <MudDateRangePicker @ref="_picker" Culture="@GetBrazilianCulture()" @bind-DateRange="DateRangeSelect" DateFormat="dd/MM/yyyy" TitleDateFormat="dddd, dd. MMMM" Editable="true" Label="Selecione a data a ser filtrada">
        <PickerActions>
            <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker!.Clear())">Limpar</MudButton>
            <MudButton OnClick="@(() => _picker!.Close())">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="@(() => OnDateRangeSelectChanged())">Ok</MudButton>
        </PickerActions>
    </MudDateRangePicker>
}

@code {
    [Parameter] public DateRange? DateRangeSelect { get; set; }
    [Parameter] public EventCallback<DateRange?> ValorChanged { get; set; }

    private MudDateRangePicker? _picker;

    private CultureInfo GetBrazilianCulture()
    {
        var culture = new CultureInfo("pt-BR");
        DateTimeFormatInfo formatInfo = culture.DateTimeFormat;
        formatInfo.AbbreviatedDayNames = new[] { "Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb" };
        formatInfo.DayNames = new[] { "Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado" };
        var monthNames = new[]
        {
        "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro", "",
    };
        formatInfo.AbbreviatedMonthNames =
            formatInfo.MonthNames =
                formatInfo.MonthGenitiveNames = formatInfo.AbbreviatedMonthGenitiveNames = monthNames;
        formatInfo.ShortDatePattern = "dd/MM/yyyy";
        formatInfo.LongDatePattern = "dddd, dd MMMM, yyyy";
        formatInfo.FirstDayOfWeek = DayOfWeek.Sunday;
        culture.NumberFormat.NumberDecimalSeparator = ",";
        culture.NumberFormat.NumberGroupSeparator = ".";
        culture.NumberFormat.NumberDecimalDigits = 2;
        return culture;
    }

    private async Task OnDateRangeSelectChanged()
    {
        _picker!.Close();
        await ValorChanged.InvokeAsync(DateRangeSelect);
    }
}
